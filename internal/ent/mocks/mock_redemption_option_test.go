// Code generated by mockery v2.28.1. DO NOT EDIT.

package ent

import (
	ent "github.com/np-inprove/server/internal/ent"
	mock "github.com/stretchr/testify/mock"
)

// MockredemptionOption is an autogenerated mock type for the redemptionOption type
type MockredemptionOption struct {
	mock.Mock
}

type MockredemptionOption_Expecter struct {
	mock *mock.Mock
}

func (_m *MockredemptionOption) EXPECT() *MockredemptionOption_Expecter {
	return &MockredemptionOption_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: _a0
func (_m *MockredemptionOption) Execute(_a0 *ent.RedemptionMutation) {
	_m.Called(_a0)
}

// MockredemptionOption_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockredemptionOption_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - _a0 *ent.RedemptionMutation
func (_e *MockredemptionOption_Expecter) Execute(_a0 interface{}) *MockredemptionOption_Execute_Call {
	return &MockredemptionOption_Execute_Call{Call: _e.mock.On("Execute", _a0)}
}

func (_c *MockredemptionOption_Execute_Call) Run(run func(_a0 *ent.RedemptionMutation)) *MockredemptionOption_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*ent.RedemptionMutation))
	})
	return _c
}

func (_c *MockredemptionOption_Execute_Call) Return() *MockredemptionOption_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockredemptionOption_Execute_Call) RunAndReturn(run func(*ent.RedemptionMutation)) *MockredemptionOption_Execute_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockredemptionOption interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockredemptionOption creates a new instance of MockredemptionOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockredemptionOption(t mockConstructorTestingTNewMockredemptionOption) *MockredemptionOption {
	mock := &MockredemptionOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
