// Code generated by mockery v2.28.1. DO NOT EDIT.

package ent

import (
	ent "github.com/np-inprove/server/internal/ent"
	mock "github.com/stretchr/testify/mock"
)

// MockforumpostOption is an autogenerated mock type for the forumpostOption type
type MockforumpostOption struct {
	mock.Mock
}

type MockforumpostOption_Expecter struct {
	mock *mock.Mock
}

func (_m *MockforumpostOption) EXPECT() *MockforumpostOption_Expecter {
	return &MockforumpostOption_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: _a0
func (_m *MockforumpostOption) Execute(_a0 *ent.ForumPostMutation) {
	_m.Called(_a0)
}

// MockforumpostOption_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockforumpostOption_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - _a0 *ent.ForumPostMutation
func (_e *MockforumpostOption_Expecter) Execute(_a0 interface{}) *MockforumpostOption_Execute_Call {
	return &MockforumpostOption_Execute_Call{Call: _e.mock.On("Execute", _a0)}
}

func (_c *MockforumpostOption_Execute_Call) Run(run func(_a0 *ent.ForumPostMutation)) *MockforumpostOption_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*ent.ForumPostMutation))
	})
	return _c
}

func (_c *MockforumpostOption_Execute_Call) Return() *MockforumpostOption_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockforumpostOption_Execute_Call) RunAndReturn(run func(*ent.ForumPostMutation)) *MockforumpostOption_Execute_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockforumpostOption interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockforumpostOption creates a new instance of MockforumpostOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockforumpostOption(t mockConstructorTestingTNewMockforumpostOption) *MockforumpostOption {
	mock := &MockforumpostOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
