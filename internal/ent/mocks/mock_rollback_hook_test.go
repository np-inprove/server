// Code generated by mockery v2.28.1. DO NOT EDIT.

package ent

import (
	ent "github.com/np-inprove/server/internal/ent"
	mock "github.com/stretchr/testify/mock"
)

// MockRollbackHook is an autogenerated mock type for the RollbackHook type
type MockRollbackHook struct {
	mock.Mock
}

type MockRollbackHook_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRollbackHook) EXPECT() *MockRollbackHook_Expecter {
	return &MockRollbackHook_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: _a0
func (_m *MockRollbackHook) Execute(_a0 ent.Rollbacker) ent.Rollbacker {
	ret := _m.Called(_a0)

	var r0 ent.Rollbacker
	if rf, ok := ret.Get(0).(func(ent.Rollbacker) ent.Rollbacker); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ent.Rollbacker)
		}
	}

	return r0
}

// MockRollbackHook_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockRollbackHook_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - _a0 ent.Rollbacker
func (_e *MockRollbackHook_Expecter) Execute(_a0 interface{}) *MockRollbackHook_Execute_Call {
	return &MockRollbackHook_Execute_Call{Call: _e.mock.On("Execute", _a0)}
}

func (_c *MockRollbackHook_Execute_Call) Run(run func(_a0 ent.Rollbacker)) *MockRollbackHook_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(ent.Rollbacker))
	})
	return _c
}

func (_c *MockRollbackHook_Execute_Call) Return(_a0 ent.Rollbacker) *MockRollbackHook_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockRollbackHook_Execute_Call) RunAndReturn(run func(ent.Rollbacker) ent.Rollbacker) *MockRollbackHook_Execute_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockRollbackHook interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockRollbackHook creates a new instance of MockRollbackHook. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockRollbackHook(t mockConstructorTestingTNewMockRollbackHook) *MockRollbackHook {
	mock := &MockRollbackHook{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
