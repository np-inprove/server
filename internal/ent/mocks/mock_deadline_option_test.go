// Code generated by mockery v2.28.1. DO NOT EDIT.

package ent

import (
	ent "github.com/np-inprove/server/internal/ent"
	mock "github.com/stretchr/testify/mock"
)

// MockdeadlineOption is an autogenerated mock type for the deadlineOption type
type MockdeadlineOption struct {
	mock.Mock
}

type MockdeadlineOption_Expecter struct {
	mock *mock.Mock
}

func (_m *MockdeadlineOption) EXPECT() *MockdeadlineOption_Expecter {
	return &MockdeadlineOption_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: _a0
func (_m *MockdeadlineOption) Execute(_a0 *ent.DeadlineMutation) {
	_m.Called(_a0)
}

// MockdeadlineOption_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockdeadlineOption_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - _a0 *ent.DeadlineMutation
func (_e *MockdeadlineOption_Expecter) Execute(_a0 interface{}) *MockdeadlineOption_Execute_Call {
	return &MockdeadlineOption_Execute_Call{Call: _e.mock.On("Execute", _a0)}
}

func (_c *MockdeadlineOption_Execute_Call) Run(run func(_a0 *ent.DeadlineMutation)) *MockdeadlineOption_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*ent.DeadlineMutation))
	})
	return _c
}

func (_c *MockdeadlineOption_Execute_Call) Return() *MockdeadlineOption_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockdeadlineOption_Execute_Call) RunAndReturn(run func(*ent.DeadlineMutation)) *MockdeadlineOption_Execute_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockdeadlineOption interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockdeadlineOption creates a new instance of MockdeadlineOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockdeadlineOption(t mockConstructorTestingTNewMockdeadlineOption) *MockdeadlineOption {
	mock := &MockdeadlineOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
